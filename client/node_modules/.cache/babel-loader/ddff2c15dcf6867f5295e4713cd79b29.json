{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\mern-project-master version final\\\\client\\\\src\\\\components\\\\Thread.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/post.actions\";\nimport Card from \"./Post/Card\";\nimport { isEmpty } from \"./Utils\";\n\nconst Thread = () => {\n  _s();\n\n  const [loadPost, setLoadPost] = useState(true);\n  const [count, setCount] = useState(5);\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.postReducer);\n\n  const loadMore = () => {\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\n      setLoadPost(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadPost) {\n      dispatch(getPosts(count));\n      setLoadPost(false);\n      setCount(count + 5);\n    }\n\n    window.addEventListener('scroll', loadMore);\n    return () => window.removeEventListener('scroll', loadMore);\n  }, [loadPost, dispatch, count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !isEmpty(posts[0]) && posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          post: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thread, \"uYliv8aL0+9P38A1nOp51AD2TrY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["C:/Users/hp/Documents/mern-project-master version final/client/src/components/Thread.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getPosts","Card","isEmpty","Thread","loadPost","setLoadPost","count","setCount","dispatch","posts","state","postReducer","loadMore","window","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","addEventListener","removeEventListener","map","post","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,OAAT,QAAwB,SAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAAzB;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,GAA0D,CAA1D,GAA8DF,QAAQ,CAACG,gBAAT,CAA0BC,YAA5F,EAA0G;AACxGd,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAJD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAJ,EAAc;AACZI,MAAAA,QAAQ,CAACR,QAAQ,CAACM,KAAD,CAAT,CAAR;AACAD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAEDO,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCR,QAAlC;AACA,WAAO,MAAMC,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCT,QAArC,CAAb;AACD,GATQ,EASN,CAACR,QAAD,EAAWI,QAAX,EAAqBF,KAArB,CATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACE;AAAA,gBACG,CAACJ,OAAO,CAACO,KAAK,CAAC,CAAD,CAAN,CAAR,IACCA,KAAK,CAACa,GAAN,CAAWC,IAAD,IAAU;AAClB,4BAAO,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ,WAAuBA,IAAI,CAACC,GAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjCD;;GAAMrB,M;UAGaL,W,EACHC,W;;;KAJVI,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/post.actions\";\nimport Card from \"./Post/Card\";\nimport { isEmpty } from \"./Utils\";\n\nconst Thread = () => {\n  const [loadPost, setLoadPost] = useState(true);\n  const [count, setCount] = useState(5);\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.postReducer);\n\n  const loadMore = () => {\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\n      setLoadPost(true);\n    }\n  }\n\n  useEffect(() => {\n    if (loadPost) {\n      dispatch(getPosts(count));\n      setLoadPost(false);\n      setCount(count + 5);\n    }\n\n    window.addEventListener('scroll', loadMore);\n    return () => window.removeEventListener('scroll', loadMore);\n  }, [loadPost, dispatch, count]);\n\n  return (\n    <div className=\"thread-container\">\n      <ul>\n        {!isEmpty(posts[0]) &&\n          posts.map((post) => {\n            return <Card post={post} key={post._id} />;\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Thread;\n"]},"metadata":{},"sourceType":"module"}