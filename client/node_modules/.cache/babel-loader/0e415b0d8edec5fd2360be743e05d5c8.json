{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\mern-project-master version final\\\\client\\\\src\\\\components\\\\Post\\\\EditDeleteComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteComment, editComment } from \"../../actions/post.actions\";\nimport { UidContext } from \"../AppContext\";\n\nconst EditDeleteComment = ({\n  comment,\n  postId\n}) => {\n  _s();\n\n  const [isAuthor, setIsAuthor] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [text, setText] = useState(\"\");\n  const uid = useContext(UidContext);\n  const dispatch = useDispatch();\n\n  const handleEdit = e => {\n    e.preventDefault();\n\n    if (text) {\n      dispatch(editComment(postId, comment._id, text));\n      setText(\"\");\n      setEdit(false);\n    }\n  };\n\n  const handleDelete = () => dispatch(deleteComment(postId, comment._id));\n\n  useEffect(() => {\n    const checkAuthor = () => {\n      if (uid === comment.commenterId) {\n        setIsAuthor(true);\n      }\n    };\n\n    checkAuthor();\n  }, [uid, comment.commenterId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-comment\",\n    children: [isAuthor && edit === false && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => setEdit(!edit),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./img/icons/edit.svg\",\n        alt: \"edit-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), isAuthor && edit && /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleEdit,\n      className: \"edit-comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        onClick: () => setEdit(!edit),\n        children: \"Editer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        onChange: e => setText(e.target.value),\n        defaultValue: comment.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            if (window.confirm(\"Voulez-vous supprimer ce commentaire ?\")) {\n              handleDelete();\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./img/icons/trash.svg\",\n            alt: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Valider modification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditDeleteComment, \"4Ms2KPmqW/9NnkFNwi3+HcUFyoA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditDeleteComment;\nexport default EditDeleteComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeleteComment\");","map":{"version":3,"sources":["C:/Users/hp/Documents/mern-project-master version final/client/src/components/Post/EditDeleteComment.js"],"names":["React","useContext","useEffect","useState","useDispatch","deleteComment","editComment","UidContext","EditDeleteComment","comment","postId","isAuthor","setIsAuthor","edit","setEdit","text","setText","uid","dispatch","handleEdit","e","preventDefault","_id","handleDelete","checkAuthor","commenterId","target","value","window","confirm"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteComment, editComment } from \"../../actions/post.actions\";\nimport { UidContext } from \"../AppContext\";\n\nconst EditDeleteComment = ({ comment, postId }) => {\n  const [isAuthor, setIsAuthor] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [text, setText] = useState(\"\");\n  const uid = useContext(UidContext);\n  const dispatch = useDispatch();\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n\n    if (text) {\n      dispatch(editComment(postId, comment._id, text));\n      setText(\"\");\n      setEdit(false);\n    }\n  };\n\n  const handleDelete = () => dispatch(deleteComment(postId, comment._id));\n\n  useEffect(() => {\n    const checkAuthor = () => {\n      if (uid === comment.commenterId) {\n        setIsAuthor(true);\n      }\n    };\n    checkAuthor();\n  }, [uid, comment.commenterId]);\n\n  return (\n    <div className=\"edit-comment\">\n      {isAuthor && edit === false && (\n        <span onClick={() => setEdit(!edit)}>\n          <img src=\"./img/icons/edit.svg\" alt=\"edit-comment\" />\n        </span>\n      )}\n      {isAuthor && edit && (\n        <form action=\"\" onSubmit={handleEdit} className=\"edit-comment-form\">\n          <label htmlFor=\"text\" onClick={() => setEdit(!edit)}>\n            Editer\n          </label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"text\"\n            onChange={(e) => setText(e.target.value)}\n            defaultValue={comment.text}\n          />\n          <br />\n          <div className=\"btn\">\n            <span\n              onClick={() => {\n                if (window.confirm(\"Voulez-vous supprimer ce commentaire ?\")) {\n                  handleDelete();\n                }\n              }}\n            >\n              <img src=\"./img/icons/trash.svg\" alt=\"delete\" />\n            </span>\n            <input type=\"submit\" value=\"Valider modification\" />\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default EditDeleteComment;\n"]},"metadata":{},"sourceType":"module"}